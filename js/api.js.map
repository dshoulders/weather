{"version":3,"sources":["../src/api.ts"],"names":["urlParams","URLSearchParams","window","location","search","API_KEY","get","API_BASE_URL","fetchLocations","response","fetch","parsedJSON","json","Locations","Location","fetchSitePeriods","locationId","periods","SiteRep","DV","Period","params","Wx","Param"],"mappings":"AAiCA,MAAMA,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,MAAMC,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAc,KAAd,CAAhB;AACA,MAAMC,YAAY,GAAG,kEAArB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAiC;AAE3D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,iBAAgBF,OAAQ,EAAzC,CAA5B;AACA,QAAMM,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AAEA,SAAOD,UAAU,CAACE,SAAX,CAAqBC,QAA5B;AACH,CANM;AAQP,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,UAAP,IAAmD;AAE/E,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,IAAGS,UAAW,oBAAmBX,OAAQ,EAA1D,CAA5B;AACA,QAAMM,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AAEA,SAAO;AACHK,IAAAA,OAAO,EAAEN,UAAU,CAACO,OAAX,CAAmBC,EAAnB,CAAsBL,QAAtB,CAA+BM,MADrC;AAEHC,IAAAA,MAAM,EAAEV,UAAU,CAACO,OAAX,CAAmBI,EAAnB,CAAsBC;AAF3B,GAAP;AAIH,CATM","sourcesContent":["import { Location } from './data.js';\r\n\r\ninterface Period {\r\n    Rep: Report[];\r\n    type: string;\r\n    value: string;\r\n}\r\n\r\ninterface Report {\r\n    D: string;\r\n    F: string;\r\n    G: string;\r\n    H: string;\r\n    Pp: string;\r\n    S: string;\r\n    T: string;\r\n    V: string;\r\n    W: string;\r\n    U: string;\r\n    $: string;\r\n}\r\n\r\nexport interface SitePeriod {\r\n    periods: Period[];\r\n    params: Param[];\r\n}\r\n\r\ninterface Param {\r\n    $: string;\r\n    name: string;\r\n    units: string;\r\n}\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst API_KEY = urlParams.get('key');\r\nconst API_BASE_URL = 'http://datapoint.metoffice.gov.uk/public/data/val/wxfcs/all/json';\r\n\r\nexport const fetchLocations = async (): Promise<Location[]> => {\r\n    \r\n    const response = await fetch(`${API_BASE_URL}/sitelist?key=${API_KEY}`);\r\n    const parsedJSON = await response.json();\r\n\r\n    return parsedJSON.Locations.Location;\r\n};\r\n\r\nexport const fetchSitePeriods = async (locationId: string): Promise<SitePeriod> => {\r\n    \r\n    const response = await fetch(`${API_BASE_URL}/${locationId}?res=3hourly&key=${API_KEY}`);\r\n    const parsedJSON = await response.json();\r\n\r\n    return { \r\n        periods: parsedJSON.SiteRep.DV.Location.Period,\r\n        params: parsedJSON.SiteRep.Wx.Param,\r\n    };\r\n};\r\n"],"file":"api.js"}