{"version":3,"sources":["../src/main.ts"],"names":["fetchLocations","filterDevonLocations","populateLocationSelector","attachButtonListener","showSelectedSiteForcast","init","allLocations","devonLocations"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,oBAAT,QAA+C,WAA/C;AACA,SAASC,wBAAT,EAAmCC,oBAAnC,EAAyDC,uBAAzD,QAAwF,UAAxF;;AAEA,MAAMC,IAAI,GAAG,YAA2B;AACpC,QAAMC,YAAwB,GAAG,MAAMN,cAAc,EAArD;AACA,QAAMO,cAAc,GAAGN,oBAAoB,CAACK,YAAD,CAA3C;AACAJ,EAAAA,wBAAwB,CAACK,cAAD,CAAxB;AACAJ,EAAAA,oBAAoB;AACpBC,EAAAA,uBAAuB;AAC1B,CAND;;AAQAC,IAAI","sourcesContent":["import { fetchLocations } from './api.js';\r\nimport { filterDevonLocations, Location } from './data.js';\r\nimport { populateLocationSelector, attachButtonListener, showSelectedSiteForcast } from './dom.js'\r\n\r\nconst init = async (): Promise<void> => {\r\n    const allLocations: Location[] = await fetchLocations();\r\n    const devonLocations = filterDevonLocations(allLocations);\r\n    populateLocationSelector(devonLocations);\r\n    attachButtonListener();\r\n    showSelectedSiteForcast();\r\n};\r\n\r\ninit();\r\n"],"file":"main.js"}