{"version":3,"sources":["../src/templates.ts"],"names":["getImageIdFromSignificantWeatherId","dayHeaderRow","periods","map","Rep","type","value","date","Date","day","getUTCDay","length","join","timeHeaderRow","rep","time","$","iconRow","imageId","W","temperatureRow","T","rainRow","Pp","table"],"mappings":"AAAA,SAASA,kCAAT,QAAmD,YAAnD;;AAIA,MAAMC,YAAY,GAAIC,OAAD,IAAsB;;MAGnCA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC1C,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAb;AACA,QAAMG,GAAG,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,EAAqDF,IAAI,CAACG,SAAL,EAArD,CAAZ;AAEA,SAAQ;+BACWN,GAAG,CAACO,MAAO;sBACpBF,GAAI;;aAFd;AAKH,CATD,EASGG,IATH,CASQ,EATR,CAUH;;CAbL;;AAiBA,MAAMC,aAAa,GAAIX,OAAD,IAAsB;;MAGpCA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC1C,SAAOF,GAAG,CAACD,GAAJ,CAASW,GAAD,IAAiB;AAC5B,UAAMC,IAAI,GAAI,GAAED,GAAG,CAACE,CAAJ,GAAQ,EAAG,KAA3B;AACA,WAAQ;;0BAEED,IAAK;;iBAFf;AAKH,GAPM,EAOJH,IAPI,CAOC,EAPD,CAAP;AAQH,CATD,EASGA,IATH,CASQ,EATR,CAUH;;CAbL;;AAiBA,MAAMK,OAAO,GAAIf,OAAD,IAAsB;;MAG9BA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC1C,SAAOF,GAAG,CAACD,GAAJ,CAASW,GAAD,IAAiB;AAC5B,UAAMI,OAAO,GAAGlB,kCAAkC,CAACc,GAAG,CAACK,CAAL,CAAlD;AACA,WAAQ;;6CAEqBD,OAAQ;;iBAFrC;AAKH,GAPM,EAOJN,IAPI,CAOC,EAPD,CAAP;AAQH,CATD,EASGA,IATH,CASQ,EATR,CAUH;;CAbL;;AAiBA,MAAMQ,cAAc,GAAIlB,OAAD,IAAsB;;UAGjCA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC1C,SAAOF,GAAG,CAACD,GAAJ,CAASW,GAAD,IAAiB;AAC5B,WAAQ;;8BAEEA,GAAG,CAACO,CAAE;;qBAFhB;AAKH,GANM,EAMJT,IANI,CAMC,EAND,CAAP;AAOH,CARD,EAQGA,IARH,CAQQ,EARR,CASH;;CAZT;;AAgBA,MAAMU,OAAO,GAAIpB,OAAD,IAAsB;;MAG9BA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC1C,SAAOF,GAAG,CAACD,GAAJ,CAASW,GAAD,IAAiB;AAC5B,WAAQ;;0BAEEA,GAAG,CAACS,EAAG;;iBAFjB;AAKH,GANM,EAMJX,IANI,CAMC,EAND,CAAP;AAOH,CARD,EAQGA,IARH,CAQQ,EARR,CASH;;CAZL;;AAgBA,OAAO,MAAMY,KAAK,GAAItB,OAAD,IAAsB;;;cAG7BD,YAAY,CAACC,OAAD,CAAU;cACtBW,aAAa,CAACX,OAAD,CAAU;;;cAGvBe,OAAO,CAACf,OAAD,CAAU;cACjBkB,cAAc,CAAClB,OAAD,CAAU;cACxBoB,OAAO,CAACpB,OAAD,CAAU;;;CATxB","sourcesContent":["import { getImageIdFromSignificantWeatherId } from './utils.js';\r\n\r\n\r\n\r\nconst dayHeaderRow = (periods): string => `\r\n    <tr>\r\n    ${\r\n        periods.map(({ Rep, type, value }): string => {\r\n            const date = new Date(value);\r\n            const day = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'][date.getUTCDay()]\r\n\r\n            return `\r\n                <th colspan=\"${Rep.length}\" class=\"table-header-day\">\r\n                    ${day}\r\n                </th>\r\n            `;\r\n        }).join('')\r\n    }\r\n    </tr>\r\n`;\r\n\r\nconst timeHeaderRow = (periods): string => `\r\n    <tr>\r\n    ${\r\n        periods.map(({ Rep, type, value }): string => {\r\n            return Rep.map((rep): string => {                        \r\n                const time = `${rep.$ / 60}:00`;\r\n                return `\r\n                    <th class=\"table-header-time\">\r\n                        ${time}\r\n                    </th>\r\n                `;\r\n            }).join('')\r\n        }).join('')\r\n    }\r\n    </tr>\r\n`;\r\n\r\nconst iconRow = (periods): string => `\r\n    <tr>\r\n    ${\r\n        periods.map(({ Rep, type, value }): string => {\r\n            return Rep.map((rep): string => {\r\n                const imageId = getImageIdFromSignificantWeatherId(rep.W);\r\n                return `\r\n                    <td class=\"table-cell-icon\">\r\n                        <img src=\"./images/${imageId}.svg\" height=\"24px\" width=\"24px\" />\r\n                    </td>\r\n                `;\r\n            }).join('')\r\n        }).join('')\r\n    }\r\n    </tr>\r\n`;\r\n\r\nconst temperatureRow = (periods): string => `\r\n    <tr>\r\n        ${\r\n            periods.map(({ Rep, type, value }): string => {\r\n                return Rep.map((rep): string => {\r\n                    return `\r\n                        <td class=\"table-cell-temp\">\r\n                            ${rep.T}&#8451;\r\n                        </td>\r\n                    `;\r\n                }).join('')\r\n            }).join('')\r\n        }\r\n    </tr>\r\n`;\r\n\r\nconst rainRow = (periods): string => `\r\n    <tr>\r\n    ${\r\n        periods.map(({ Rep, type, value }): string => {\r\n            return Rep.map((rep): string => {\r\n                return `\r\n                    <td class=\"table-cell-rain\">\r\n                        ${rep.Pp}&#37;\r\n                    </td>\r\n                `;\r\n            }).join('')\r\n        }).join('')\r\n    }\r\n    </tr>\r\n`;\r\n\r\nexport const table = (periods): string => `\r\n    <table>\r\n        <thead>\r\n            ${dayHeaderRow(periods)}\r\n            ${timeHeaderRow(periods)}            \r\n        </thead>\r\n        <tbody>\r\n            ${iconRow(periods)} \r\n            ${temperatureRow(periods)}             \r\n            ${rainRow(periods)}           \r\n        </tbody>\r\n    </table>\r\n`;"],"file":"templates.js"}